buildscript {
    ext {
        queryDslVersion = "5.1.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.scheduler'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

jar {
    enabled = false
}

ext {
    springCloudVersion = "2024.0.0"
}

dependencies {
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    implementation "com.querydsl:querydsl-core:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // cahce
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'

    // AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    //MSA
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.2.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.2.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.2.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-config:4.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp:4.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.springframework.boot:spring-boot-starter-hateoas:3.3.5'

//    implementation 'com.fasterxml.uuid:java-uuid-generator:5.1.0'


    // SWAGGER
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'

    // MAIL
    implementation 'org.springframework.boot:spring-boot-starter-mail'
//    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // JWT
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.5'

    // SECURITY
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Annotation
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"


    // TEST
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    compileOnly 'org.projectlombok:lombok'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.projectreactor:reactor-test'
    testAnnotationProcessor'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}


tasks.named('test') {
    useJUnitPlatform()
}
